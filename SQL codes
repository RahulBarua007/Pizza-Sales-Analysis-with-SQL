#Retrieve the total number of orders placed.

select count(*) as Total_Orders from orders;


#Calculate the total revenue generated from pizza sales.

SELECT 
    ROUND(SUM(d.quantity * p.price), 2) AS Total_Revenue
FROM
    order_details d
        JOIN
    pizzas p ON d.pizza_id = p.pizza_id;


#Identify the highest-priced pizza.

SELECT 
    pizza_types.name, MAX(pizzas.price) AS max_price
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
GROUP BY pizza_types.name
ORDER BY max_price DESC
LIMIT 1;


#Identify the most common pizza size ordered.

select pizzas.size , count(order_details.quantity) 
from pizzas
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizzas.size ; 


#List the top 5 most ordered pizza types along with their quantities.

select pizza_types.name , sum(order_details.quantity) as total_quantity
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name
order by total_quantity desc
limit 5;


#Join the necessary tables to find the total quantity of each pizza category ordered.

select pizza_types.category , sum(order_details.quantity) as total_quantity
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by category;


#Determine the distribution of orders by hour of the day.
 
 select hour(order_time) , count(order_id) as order_count
 from orders
group by hour(order_time);


#Join relevant tables to find the category-wise distribution of pizzas.

select pizza_types.category , count(pizza_types.name) as count
from pizza_types
group by category;


#Group the orders by date and calculate the average number of pizzas ordered per day.

select avg(quantity) from
(select orders.order_date , sum(order_details.quantity) as quantity 
from orders
join order_details
on orders.order_id = order_details.order_id
group by order_date) as order_quantity ;


#Determine the top 3 most ordered pizza types based on revenue.

select pizza_types.name , sum(pizzas.price*order_details.quantity) as revenue
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.name
order by revenue desc limit 3;


#Calculate the percentage contribution of each pizza type to total revenue.

select pizza_types.category , (sum(pizzas.price*order_details.quantity) / (SELECT 
    ROUND(SUM(d.quantity * p.price), 2) AS Total_Revenue
FROM
    order_details d
        JOIN
    pizzas p ON d.pizza_id = p.pizza_id) ) *100 as revenue
from pizza_types
join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on pizzas.pizza_id = order_details.pizza_id
group by pizza_types.category
order by revenue desc limit 3;


#Analyze the cumulative revenue generated over time.

select order_date , sum(revenue) over (order by order_date) as cum_revenue
from
(select orders.order_date , sum(order_details.quantity*pizzas.price) as revenue
from order_details
join pizzas
on order_details.pizza_id=pizzas.pizza_id
join orders
on orders.order_id=order_details.order_id
group by orders.order_date) as Sales;


#Determine the top 3 most ordered pizza types based on revenue for each pizza category. 

select name,revenue from 
(select category,name,revenue, rank() over(partition by category order by revenue desc) as rn
from
 (select pizza_types.category , pizza_types.name,
 sum(order_details.quantity*pizzas.price) as revenue
 from pizza_types
 join pizzas
 on pizza_types.pizza_type_id=pizzas.pizza_type_id
 join order_details
 on order_details.pizza_id = pizzas.pizza_id
 group by pizza_types.category , pizza_types.name) as a) as b
 where rn<=3;
